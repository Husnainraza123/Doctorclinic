@model DoctorApp.Models.EmployeeViewModel

@{
    ViewBag.Title = "EditEmployee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content">
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <h4 class="page-title">Edit Empolyee</h4>
        </div>
    </div>
    @Html.HiddenFor(x => x.EmployeeID, new { id = "hdnID" })
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <form>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>First Name</label>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Last Name</label>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Email <span class="text-danger">*</span></label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Joining Date</label>
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Phone</label>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Role Name</label>
                            <select name="ddlRole" id="ddlRole" class="form-control">
                                <option value="">Select Role Name</option>
                                @if (ViewBag.RoleName != null)
                                {
                                    foreach (var rn in ViewBag.RoleName)
                                    {
                                        <option value="@rn.RoleID">@rn.RoleName </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Avatar</label>
                            <div class="profile-upload">
                                <div class="upload-img">
                                    <img alt="" src="../assets/img/user.jpg">
                                </div>
                                <div class="upload-input">
                                    <input id="EmployeeImage" type="file" class="form-control">
                                    <asp:HiddenField ID="hdnImg" ClientIDMode="Static" runat="server" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="display-block">Status</label>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="status" id="employee_active" value="option1" checked>
                        <label class="form-check-label" for="employee_active">
                            Active

                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="status" id="employee_inactive" value="option2">
                        <label class="form-check-label" for="employee_inactive">
                            Inactive

                        </label>
                    </div>
                </div>
                <div class="m-t-20 text-center">
                    <button type="button" class="btn btn-primary submit-btn" onclick="Edit()" style=" padding-top: 7px; font-size: 12px;">Save Employee</button>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
    function readURL(input, hiddenInputId) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                // Set the base64 string or data URL to the hidden input field
                document.getElementById(hiddenInputId).value = e.target.result;
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    // Function to handle image upload
    function uploadImage() {
        var fileInput = document.getElementById('EmployeeImage');
        if (fileInput.files && fileInput.files[0]) {
            var file = fileInput.files[0];

            // Use readURL to set the data URL to the hidden input
            readURL(fileInput, 'hdnImg');
        } else {
            console.error('No file selected');
        }
    }




    function Edit() {
        debugger;
        /*var imgFiles = $("#PatientImage")[0];*/
        var currentDate = new Date().toISOString();
        var hdnimg = $('#hdnImg').val();

        var img = "";
        var id = $('#hdnID').val();

        var formData = new FormData();
        var imgFiles = $("#EmployeeImage").get(0).files;

        if (imgFiles.length > 0) {
            formData.append('ImageFile', imgFiles[0]);
        }
        else {
            formData.append('ImageFile', $("#imgProfile").attr('src'));
        }

        if (id > 0) {

            formData.append('EmployeeID', id);
            formData.append('FirstName', $('#FirstName').val());
            formData.append('LastName', $('#LastName').val());
            formData.append('RoleID', $('#ddlRole').val());
            formData.append('Email', $('#Email').val());
            formData.append('DOB', $('#DOB').val());
            formData.append('Phone', $('#Phone').val());
            formData.append('Image', imgFiles[0]);
            //formData.append('ImageFile', hdnimg);
            formData.append('ModifyBy', 'Husnain Memon');
            formData.append('ModifyDate', currentDate);
            formData.append('Status', $('input[name="status"]:checked').val());

        }

        else {

            formData.append('FirstName', $('#FirstName').val());
            formData.append('LastName', $('#LastName').val());
            formData.append('RoleID', $('#ddlRole').val());
            formData.append('Email', $('#Email').val());
            formData.append('DOB', $('#DOB').val());
            formData.append('Phone', $('#Phone').val());
            formData.append('Image', imgFiles[0]);
            //formData.append('ImageFile', hdnimg);
            formData.append('CreatedBy', 'Husnain Memon');
            formData.append('CreatedDate', currentDate);
            formData.append('Status', $('input[name="status"]:checked').val());
        }
        $.ajax({
            url: "/Employee/EditEmployee",
            dataType: "json", // Lowercase "json"
            type: "POST",
            contentType: false, // Set contentType to false
            processData: false, // Set processData to false
            data: formData,
            success: function (response) {
                debugger;
                if (response == 1) { // Assuming your response has a status field
                    notifySuccess("Data Update Successfully");

                    $('#exampleModal').find('.close').click();
                    Bind();


                    //window.location.href = '/Admin/DisplayTeacher';
                } else {
                    notifyDanger("Data Not Update");
                }
            },
            error: function (xhr, status, error) {
                debugger
                console.error("Error:", xhr.responseText);
            }
        });

    }
</script>