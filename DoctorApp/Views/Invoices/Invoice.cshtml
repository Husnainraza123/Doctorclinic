@model IEnumerable<DoctorApp.Models.InvoiceViewModel>

@{
    ViewBag.Title = "Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    <div class="row">
        <div class="col-sm-5 col-4">
            <h4 class="page-title">Invoices</h4>
        </div>
        <div class="col-sm-7 col-8 text-right m-b-30">
            <a href="../Invoices/AddInvoice" class="btn btn btn-primary btn-rounded float-right" style=" width: 135px; height: 32px; padding-top: 7px; font-size: 12px;"><i class="fa fa-plus"></i>Create New Invoice</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-border table-striped custom-table datatable mb-0" id="mytable">
                    <thead>
                        <tr>

                            <th>Invoice Number</th>
                            <th>Patient</th>
                            <th>Created Date</th>
                            @*<th>Amount</th>*@
                            <th>Total</th>
                            <th>Discount</th>
                            <th>GrandTotal</th>
                            @*<th>Status</th>*@
                            <th class="text-right">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td><a href="#">#@item.InvoiceID</a></td>
                                <td>@item.PatientName</td>
                                <td>@item.InvoiceDate</td>
                                @*<td>@item.Amount</td>*@
                                <td>@item.Total</td>
                                <td>@item.Discount</td>
                                <td>@item.GrandTotal</td>
                                @*<td><span class="custom-badge status-green">Paid</span></td>*@
                                <td class="text-right">
                                    <div class="dropdown dropdown-action">
                                        <a href="#" class="action-icon dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a class="dropdown-item" onclick="EditInvoice(@item.InvoiceID)"><i class="fa fa-pencil m-r-5"></i> Edit</a>
                                            <a class="dropdown-item" href="invoice-view.html"><i class="fa fa-eye m-r-5"></i>View</a>
                                            <a class="dropdown-item" href="#"><i class="fa fa-file-pdf-o m-r-5"></i>Download</a>
                                            <a class="dropdown-item" onclick="Delete(@item.InvoiceID)"><i class="fa fa-trash-o m-r-5"></i> Delete</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>

                        }

                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>

<script>
    // Function to Edit Invoice
    function EditInvoice(InvoiceID) {
        window.location.href = '/Invoices/EditInvoice?Id=' + InvoiceID;
    }

    // Attach click event to the edit button
    $('Edit').click(function () {

        var InvoiceID = $(this).data('id');

        // Change the modal title for editing
        $('#exampleModalLabel').text("Edit Invoice");

        // Fetch the data from the server for the selected invoice
        $.ajax({
            url: "/Invoices/EditInvoice",
            dataType: "json",
            type: "POST",
            data: { id: InvoiceID },
            success: function (response) {
                if (response) {
                    // Populate form fields with fetched data
                    $('#PatientsID').val(response.PatientsID);
                    $('#Patient_Address').val(response.Patient_Address);
                    $('#Billing_Address').val(response.Billing_Address);
                    $('#InvoiceDate').val(response.InvoiceDate);
                    $('#Amount').val(response.Amount);
                    $('#Discount').val(response.Discount);
                    $('#GrandTotal').val(response.GrandTotal);
                } else {
                    notifyDanger("Invoice data not found");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", xhr.responseText);
                notifyDanger("Error occurred while fetching invoice data");
            }
        });
    });


    function Delete(id) {
        debugger;
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/Invoices/DeleteInvoice",
                    type: "POST",
                    data: { id: id },
                    success: function (response) {
                        debugger;
                        if (response == 1) {
                            // Reload the DataTable after successful deletion
                            window.location.reload(); // Reload the table without resetting pagination

                            Swal.fire({
                                title: "Deleted!",
                                text: "Your file has been deleted.",
                                icon: "success"
                            });
                        } else {
                            Swal.fire({
                                title: "Error",
                                text: "Invoice could not be deleted.",
                                icon: "error"
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("Error:", xhr.responseText);
                    }
                });
            }
        });
    }



</script>

