@model DoctorApp.ViewModel.InvoicesViewModel

@{
    ViewBag.Title = "EditInvoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    <div class="row">
        <div class="col-sm-12">
            <h4 class="page-title">Edit Invoice</h4>
        </div>
    </div>
    @Html.HiddenFor(x => x.Invoice.ID, new { id = "hdnID" })
    @Html.HiddenFor(x => x.Invoice.InvoiceDetailID, new { id = "hdnId" })
    @Html.HiddenFor(x => x.Invoice.Patient_id, new { id = "hdnPatientId" })
    <div class="row">
        <div class="col-sm-12">
            <form>
                <div class="row">
                    <div class="col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Patient <span class="text-danger">*</span></label>

                            @Html.EditorFor(model => model.Invoice.Patient_Name, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Patient Address</label>
                            @Html.EditorFor(model => model.Invoice.Patient_Address, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>


                    <div class="col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Billing Address</label>
                            @Html.EditorFor(model => model.Invoice.Billing_Address, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>


                    <div class="col-sm-6 col-md-3">
                        <div class="form-group">
                            <label>Invoice date <span class="text-danger">*</span></label>
                            <div class="cal">
                                @Html.EditorFor(model => model.Invoice.Invoice_Date, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-hover table-white" id="invoiceTable">
                                <thead>
                                    <tr>
                                        <th style="width: 20px">#</th>
                                        <th class="col-sm-2">Item</th>
                                        <th class="col-md-6">Description</th>
                                        <th style="width:100px;">Unit Cost</th>
                                        <th style="width:80px;">Qty</th>
                                        <th>Amount</th>
                                        <th> </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ListInvoices)
                                    {
                                        <tr>
                                            <td></td>
                                            <td>
                                                @Html.EditorFor(model => item.Item, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => item.des, new { htmlAttributes = new { @class = "form-control" } })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => item.price, new { htmlAttributes = new { @class = "form-control", @onchange = "Calc(this);" } })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => item.Qty, new { htmlAttributes = new { @class = "form-control", @onchange = "Calc(this);" } })
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => item.Amount, new { htmlAttributes = new { @class = "form-control", @id = "amtInput" } })
                                            </td>
                                            <td><a href="javascript:void(0)" class="text-success font-18 addRow" title="Add"><i class="fa fa-plus"></i></a></td>
                                            <td>
                                                <a href="javascript:void(0)" class="text-danger font-18 deleteRow" title="Delete">
                                                    <i class="fa fa-trash"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover table-white">
                                <tbody>

                                    <tr>
                                        <td colspan="5" style="text-align: right; font-weight: bold">
                                            Total

                                        </td>
                                        <td style="text-align: right; padding-right: 30px; font-weight: bold; font-size: 16px; width: 230px">
                                            @Html.EditorFor(model => model.Invoice.Total, new { htmlAttributes = new { @class = "form-control" } })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="5" style="text-align: right; font-weight: bold">
                                            Discount
                                        </td>
                                        <td style="text-align: right; padding-right: 30px; font-weight: bold; font-size: 16px;width: 230px">
                                            @Html.EditorFor(model => model.Invoice.Discount, new { htmlAttributes = new { @class = "form-control", @name = "Dis", @onchange = "updateGrandTotal();" } })

                                        </td>
                                    </tr>

                                    <tr>
                                        <td colspan="5" style="text-align: right; font-weight: bold">
                                            Grand Total
                                        </td>
                                        <td style="text-align: right; padding-right: 30px; font-weight: bold; font-size: 16px;width: 230px">
                                            @Html.EditorFor(model => model.Invoice.GrandTotal, new { htmlAttributes = new { @class = "form-control" } })
                                            <span id="grandtotal"></span>
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
                <div class="text-center m-t-20">
                    <button type="button" class="btn btn-primary submit-btn" onclick="Edit()" style=" padding-top: 7px; font-size: 12px;">Save Invoice</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>

    function Edit() {
        debugger;
        var id = $('#hdnID').val();
        var ID = $('#hdnId').val();
        var formData = new FormData();
        var currentDate = new Date().toISOString();

        if (id > 0) { // if editing an existing invoice
            formData.append('InvoiceID', id);
            formData.append('InvoiceDetailID',ID);
            formData.append('PatientsID', $('#hdnPatientId').val());
            formData.append('Patient_Address', $('#Invoice_Patient_Address').val());
            formData.append('Billing_Address', $('#Invoice_Billing_Address').val());
            formData.append('InvoiceDate', $('#Invoice_Invoice_Date').val());
            formData.append('Item', $('#item_Item').val());
            formData.append('Description', $('#item_des').val());
            formData.append('UnitCost', $('#item_price').val());
            formData.append('Quantity', $('#item_Qty').val());
            formData.append('Amount', $('#amtInput').val());
            formData.append('Total', $('#Invoice_Total').val());
            formData.append('Discount', $('#Invoice_Discount').val());
         
            formData.append('CreatedBy', 'Husnain Memon');
            formData.append('CreatedDate', currentDate);
            formData.append('ModifyBy', 'Husnain Memon');
            formData.append('ModifyDate', currentDate);
            
            formData.append('GrandTotal', $('#Invoice_GrandTotal').val());

            // Get each row's data for the invoice items
            $('#invoiceTable tbody tr').each(function (index, row) {
                var item = $(row).find('input[name="item.Item"]').val();
                var description = $(row).find('input[name="item.des"]').val();
                var unitCost = $(row).find('input[name="item.price"]').val();
                var quantity = $(row).find('input[name="item.Qty"]').val();
                var amount = $(row).find('input[name="item.Amount"]').val();
             
               
                debugger;
                // Append row data with index to formData
                formData.append('Item[]', item);
                formData.append('Description[]', description);
                formData.append('UnitCost[]', unitCost);
                formData.append('Quantity[]', quantity);
                formData.append('Amount[]', amount);
                
             
               
               
            });

            $.ajax({
                url: "/Invoices/EditInvoice",
                dataType: "json",
                type: "POST",
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    if (response.success) {
                        notifySuccess(response.message);
                        $('#exampleModal').find('.close').click();
                      /*  Bind(); // Call your Bind function here to refresh the invoice list*/
                    } else {
                        notifyDanger(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", xhr.responseText);
                }
            });
        }
    }

    function addNewRow() {
        if (Validate()) {
            var tableBody = document.querySelector("#invoiceTable tbody");

            // Create a new row element
            var newRow = document.createElement("tr");

            // Set the HTML content for the new row
            newRow.innerHTML = `
                <td></td>
                <td><input class="form-control" type="text" style="min-width:150px"></td>
                <td><input class="form-control" type="text" style="min-width:150px"></td>
                <td><input class="form-control" style="width:100px" type="text" name="unit-cost" onchange="Calc(this);"></td>
                <td><input class="form-control" style="width:80px" type="text" name="qty" onchange="Calc(this);"></td>
                <td>  <input class="form-control form-amt" readonly="" style="width:120px" type="text" name="Amt" id="amtInput" value="0"></td>
                <td><a href="javascript:void(0)" class="text-success font-18 addRow" title="Add"><i class="fa fa-plus"></i></a></td>
                <td><a href="javascript:void(0)" class="text-danger font-18 deleteRow" title="Delete" onclick="deleteRow(this);"><i class="fa fa-trash"></i></a></td>
            `;

            // Append the new row to the table body
            tableBody.appendChild(newRow);

            // Update the row numbers
            updateRowNumbers();
        }

    }

    // Function to update row numbers in the first column
    function updateRowNumbers() {
        var rows = document.querySelectorAll("#invoiceTable tbody tr");
        rows.forEach((row, index) => {
            row.cells[0].innerText = index + 1; // Update the row number (first column)
        });
    }
    function deleteRow(button) {
        // Get the row to be deleted
        var row = button.closest("tr");

        // Remove the row from the table
        row.remove();

        // Update the row numbers
        updateRowNumbers();

        // Update the total and grand total after row deletion
        updateTotal();
    }

    // Event delegation to handle clicks on dynamically added "Add" buttons
    document.addEventListener('click', function (event) {
        if (event.target.closest('.addRow')) {
            if (Validate()) {
                addNewRow();
                deleteRow();
            }


        }
    });

    function Calc(v) {
        // Find the closest row (using jQuery's closest method)
        var row = $(v).closest('tr');

        // Get the values of qty and unit cost from the input fields
        var qty = parseFloat(row.find('input[name="item.Qty"]').val()) || 0;
        var unitCost = parseFloat(row.find('input[name="item.price"]').val()) || 0;

        // Calculate the amount
        var amount = qty * unitCost;

        // Set the calculated amount to the element with id #grandtotal within this row
        row.find('#amtInput').val(amount.toFixed(2)); // Use toFixed(2) to ensure two decimal places

        // Call updateTotal() to update the total and grand total
        updateTotal();
    }


    // Function to update the total for all rows
    function updateTotal() {
        debugger
        var total = 0;
        var amounts = document.querySelectorAll('input[name="item.Amount"]');
        amounts.forEach(function (amountField) {
            total += parseFloat(amountField.value) || 0;
        });

        // Update the total display
        // document.getElementById('Invoice.Total').innerText = total.toFixed(2);
        document.getElementById('Invoice_Total').value = total;
        // Update the grand total
        updateGrandTotal();
    }

    // Function to update the grand total based on total and discount
    function updateGrandTotal() {
        var total = parseFloat(document.getElementById('Invoice_Total').value) || 0;
        var discount = parseFloat(document.querySelector('input[name="Invoice.Discount"]').value) || 0;
        var grandTotal = total - discount;

        // Update the grand total display
        document.getElementById('Invoice_GrandTotal').value = grandTotal.toFixed(2);
    }

    // Add event listeners for existing rows on page load
    document.addEventListener('DOMContentLoaded', function () {
        var unitCosts = document.querySelectorAll('input[name="item.price"]');
        var qtys = document.querySelectorAll('input[name="item.Qty"]');
        unitCosts.forEach(function (input) {
            input.addEventListener('change', function () {
                Calc(this);
            });
        });
        qtys.forEach(function (input) {
            input.addEventListener('change', function () {
                Calc(this);
            });
        });
    });




    function notifyDanger(message) {
        $('#notificationElement').html(message).addClass('large-text').show();
        // Add your existing code to display the message
    }




    function Validate() {

        let row = $("#invoiceTable").find("tr").last();/*$('table tr:last');*/

        let amount = row.find('#amtInput').val();

        if (amount == 0 || amount == '') {

            notifyDanger('<span style="font-size: 12px; font-weight:bold;">' + 'Please enter amount' + '</span>');
            return false;
        }
        return true;
    }
</script>
