@model DoctorApp.Models.Doctor

@{
    ViewBag.Title = "EditDoctor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>

    <div class="content">
        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <h4 class="page-title">Edit Doctor</h4>
            </div>
        </div>
        @Html.HiddenFor(x => x.DoctorID, new { id = "hdnDoctorId" })
        <div class="row">
            <div class=" col-lg-8 offset-lg-2">
                <div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>First Name <span class="text-danger">*</span></label>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Last Name</label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Email <span class="text-danger">*</span></label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Date of Birth</label>
                                <div class="cal-icon">
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group gender-select">
                                <label class="gen-label">Gender:</label>
                                <div class="form-check-inline">
                                    <label class="form-check-label">
                                        <input type="radio" id="rdbMale" name="gender" class="form-check-input">Male
                                    </label>
                                </div>
                                <div class="form-check-inline">
                                    <label class="form-check-label">
                                        <input type="radio" id="rdbFeMale" name="gender" class="form-check-input">Female

                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Address</label>
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="row">

                                <div class="col-sm-6 col-md-6 col-lg-3">
                                    <div class="form-group">
                                        <label>Country</label>
                                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                        @*<select id="Country" class="form-control select">
                                                <option value="Afghanistan">Afghanistan</option>
                                                <option value="Australia">Australia</option>
                                                <option value="Austria">Austria</option>
                                                <option value="Azerbaijan">Azerbaijan</option>
                                                <option value="Northern Mariana Islands">Northern Mariana Islands</option>
                                                <option value="Norway">Norway</option>
                                                <option value="Oman">Oman</option>
                                                <option value="Pakistan">Pakistan</option>

                                            </select>*@
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 col-lg-3">
                                    <div class="form-group">
                                        <label>City</label>
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 col-lg-3">
                                    <div class="form-group">
                                        <label>State/Province</label>
                                        @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })
                                        @*<select id="StateProvince" class="form-control select">
                                                <option value="">Select state</option>
                                                <option value="JK">Azad Kashmir</option>
                                                <option value="BA">Balochistan</option>
                                                <option value="TA">Federally Administered Tribal Areas</option>
                                                <option value="GB">Gilgit-Baltistan</option>
                                                <option value="IS">Islamabad Capital Territory</option>
                                                <option value="KP">Khyber Pakhtunkhwa</option>
                                                <option value="PB">Punjab</option>
                                                <option value="SD">Sindh</option>
                                            </select>*@
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 col-lg-3">
                                    <div class="form-group">
                                        <label>Postal Code</label>
                                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Phone </label>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Avatar</label>
                                <div class="profile-upload">
                                    <div class="upload-img">
                                        <img alt="" src="../assets/img/user.jpg">
                                    </div>
                                    <div class="upload-input">
                                        <input id="DoctorImage" type="file" class="form-control">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Short Biography</label>
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        <input type="hidden" id="hdnID" />
                    </div>

                    <div class="m-t-20 text-center">
                        @*<a class="btn btn-primary submit-btn" id="btnSave" onclick="save()">Save Doctor</a>*@
                        <button class="btn btn-primary submit-btn" onclick="Edit()" style=" padding-top: 7px; font-size: 12px;">Save Doctor</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


    }
</div>

<script>
    function readURL(input, hiddenInputId) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById(hiddenInputId).value = e.target.result;
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    function uploadImage() {
        var fileInput = document.getElementById(' ');
        if (fileInput.files && fileInput.files[0]) {
            readURL(fileInput, 'hdnImg');
        } else {
            console.error('No file selected');
        }
    }

    function Edit() {
        debugger;
        var currentDate = new Date().toISOString();
        var id = $('#hdnDoctorId').val();
        var formData = new FormData();
        var imgFiles = $("#DoctorImage").get(0).files;

        if (imgFiles.length > 0) {
            formData.append('ImageFile', imgFiles[0]);
        } else {
            formData.append('ImageFile', $("#imgProfile").attr('src'));
        }

        var selectedGender = $('input[name="gender"]:checked').val() || '';

        if (id > 0) {
            formData.append('DoctorID', id);
        }

        formData.append('FirstName', $('#FirstName').val());
        formData.append('LastName', $('#LastName').val());
        formData.append('Email', $('#Email').val());
        formData.append('DOB', $('#DOB').val());
        formData.append('Gender', selectedGender);
        formData.append('Address', $('#Address').val());
        formData.append('Country', $('#Country').val());
        formData.append('City', $('#City').val());
        formData.append('Province', $('#Province').val());
        formData.append('Phone', $('#Phone').val());
        formData.append('PostalCode', $('#PostalCode').val());
        formData.append('Description', $('#Description').val());
        formData.append('ModifyBy', 'Husnain Memon');
        formData.append('ModifyDate', currentDate);
        formData.append('Status', $('#status').val());

        $.ajax({
            url: "/Doctor/EditDoctor",
            type: "POST",
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                debugger;
                if (response.success) {
                    notifySuccess("Data Updated Successfully");
                    $('#exampleModal').modal('hide');
                    Bind();
                } else {
                    notifyDanger("Data Not Updated: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                debugger;
                console.error("Error:", xhr.responseText);
            }
        });
    }


</script>
